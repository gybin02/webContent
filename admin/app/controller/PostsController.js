/*
 * File: app/controller/PostsController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.PostsController', {
    extend: 'Ext.app.Controller',

    refs: {
        postDetails: '#postDetails',
        closePost: '#closePost',
        openPost: '#openPost',
        postsGrid: '#PostsGrid',
        updatePost: '#updatePost',
        postsWinForm: '#PostsWinForm',
        postsDetailsWindow: '#PostsDetailsWindow',
        converseToArticle: '#converseToArticle',
        searchPost: '#SearchPost',
        postSearchForm: '#PostSearchForm',
        articleAddWinForm: '#articleAddWinForm',
        comeToHeatView: '#comeToHeatView',
        addHeatViewWindow: '#AddHeatViewWindow',
        clearPostSearchBt: '#clearPostSearchBt',
        createTime: '#createTime'
    },

    control: {
        "#postDetails": {
            click: 'onPostDetailsClick'
        },
        "#closePost": {
            click: 'onClosePostClick'
        },
        "#openPost": {
            click: 'onOpenPostClick'
        },
        "#updatePost": {
            click: 'onUpdatePostClick'
        },
        "#PostsDetailsWindow": {
            close: 'onPostsDetailsWindowClose'
        },
        "#SearchPost": {
            click: 'onSearchPostClick'
        },
        "#comeToHeatView": {
            click: 'onComeToHeatViewClick'
        },
        "#PostsGrid": {
            beforehide: 'onPostsGridBeforeHide'
        },
        "#clearPostSearchBt": {
            click: 'onClearPostSearchBtClick'
        }
    },

    /* 帖子列表编辑按钮事件 */
    onPostDetailsClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getPostsGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var win = Ext.create("GURUAdmin.view.PostsDetailsWindow");
            var form = win.getComponent("PostsWinForm").getForm();

            Ext.Ajax.request({
                url:"../api/post/" + record[0].data.postId,
                method: 'GET',
                success: function (resp) {
                    var t = Ext.util.JSON.decode(resp.responseText);

                    var obj = record[0].data;
                    form.findField("postId").setValue(obj.postId);
                    form.findField("postTitle").setValue(obj.title);
                    form.findField("postUserName").setValue(obj.nick);
                    form.findField('postStatus').setValue({postStatus: obj.status});
                    form.findField('postType').setValue({postType: obj.type});
                    form.findField("content").setValue(t.result.content);
                    var createDate = obj.createDate == '' || obj.createDate == null ? '' : Ext.util.Format.date(new Date(obj.createDate*1000), "Y-m-d");

                    form.findField('createDate').setValue(createDate);

                    me.getCreateTime().setValue(new Date(obj.createDate*1000));

                    Ext.Ajax.request({
                        url:"../api/comment/adminList?postId="+record[0].data.postId,
                        method: 'GET',
                        success: function (resp) {
                            var t = Ext.util.JSON.decode(resp.responseText);
                            var commentStore = Ext.data.StoreManager.lookup("CommentStore");
                            commentStore.removeAll();
                            commentStore.loadData(t.result);
                        }
                    });
                    win.show();
                }
            });

        }

    },

    onClosePostClick: function(button, e, eOpts) {
        this.updatePostStauts(0);
    },

    onOpenPostClick: function(button, e, eOpts) {
        this.updatePostStauts(1);
    },

    /* 修改帖子 */
    onUpdatePostClick: function(button, e, eOpts) {
        var me = this;
        var form = this.getPostsWinForm().getForm();
        var type = form.findField("postType").getValue().postType;
        var status = form.findField('postStatus').getValue().postStatus;
        var postId = parseInt(form.findField("postId").getValue());
        var content = form.findField("content").getValue();
        var title = form.findField("postTitle").getValue();
        var createData = form.findField("createDate").getValue().getTime()/1000;
        //time控件是以08年开始的，所以要减去08年开始的时间戳
        var createTime = me.getCreateTime().getValue().getTime()/1000 - 1199116800;
        //alert("createTime:" + );
        var temp = {
            "postId": postId,
            "type": type == '' ? null : type,
            "title": title == '' ? null : title,
            "content": content == '' ? null : content,
            "status": status == '' ? null : status,
            "createDate":createData + createTime
        };
        Ext.Ajax.request({
            params: Ext.encode(temp),
            headers: {
                'Content-Type': 'application/json'
            },
            url: "../api/post/admin/update",
            method: 'POST',
            success: function (resp) {
                var obj = Ext.util.JSON.decode(resp.responseText);
                if(obj.statusCode == 200){
                    Ext.MessageBox.alert('更新操作', obj.message);
                    var win = me.getPostsDetailsWindow();
                    win.close();
                }else{
                    Ext.MessageBox.alert('操作失败', obj.message);
                }

            }
        });//
    },

    onPostsDetailsWindowClose: function(panel, eOpts) {
        var PostsStore = Ext.data.StoreManager.lookup("PostsStore");
        PostsStore.reload();
    },

    onSearchPostClick: function(button, e, eOpts) {
        var me = this;
        var form = me.getPostSearchForm().getForm();
        var postStore = Ext.data.StoreManager.lookup("PostsStore");
        //条件查询，支持翻页
        postStore.on('beforeload', function(store, options) {
            var toDate = form.findField("createDateTo").getValue();
            var fromDate = form.findField("createDateFrom").getValue();
            var type =form.findField("TypeInput").value;
            var nick = form.findField("postManNick").value;
            var status=form.findField("PostStatusInput").value;
            // var userName = form.findField("postMan").getValue();
            var title = form.findField("postTitleInput").getValue();
            var queryParams = {
                // "userName":userName ,
                "title": title ,
                "nick":nick,
                "toDate": toDate==null || toDate ==''?null:toDate.getTime()/1000,
                "fromDate": fromDate==null || fromDate ==''?null:fromDate.getTime()/1000,
                "status":  status==-1?null:status,
                "type": type ==-1?null:type

            };
            Ext.apply(store.proxy.extraParams, queryParams);
        });
        postStore.loadPage(1);
    },

    onComeToHeatViewClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getPostsGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var win = Ext.create("GURUAdmin.view.AddHeatViewWindow");
            var form = win.getComponent("addHeatViewWinForm").getForm();
            var obj = record[0].data;
            form.findField("formAuthor").setValue(obj.userName);
            form.findField("formHeatPostId").setValue(obj.postId);
            form.findField("formHeatRemark").setValue(obj.content);

            win.show();
        }
    },

    onPostsGridBeforeHide: function(component, eOpts) {
        this.getPostSearchForm().reset();
    },

    onClearPostSearchBtClick: function(button, e, eOpts) {
        this.getPostSearchForm().reset();
    },

    updatePostStauts: function(status) {
        var me = this;
        var selectionModel = me.getPostsGrid().getSelectionModel();
        var records = selectionModel.getSelection();
        if (records == null || records == undefined || records.length == 0) {
            Ext.MessageBox.alert('未选中', "请至少选中一行");
        } else {
            var ids= new Array();
            for (var i = 0; i < records.length; i++) {
                ids.push(records[i].get('postId'));
            }
            var temp = {
                "ids":ids,
                "status":status
            };

            Ext.Ajax.request({
                url: "../api/post/batUpdateStatus",
                method: 'POST',
                params: Ext.encode(temp),
                headers: {
                    'Content-Type': 'application/json'
                },
                success: function (resp) {
                    var obj = Ext.util.JSON.decode(resp.responseText);
                    Ext.MessageBox.alert('帖子操作', obj.message);
                    Ext.data.StoreManager.lookup("PostsStore").reload();
                }
            });
        }
    }

});
