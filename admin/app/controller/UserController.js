/*
 * File: app/controller/UserController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.UserController', {
    extend: 'Ext.app.Controller',

    refs: {
        closeUser: '#closeUser',
        queryDetails: '#queryDetails',
        userListGrid: '#UserListGrid',
        headerPanel: '#headerPanel',
        gMainPanel: '#GMainPanel',
        searchUser: '#SearchUser',
        userDesc: '#UserDesc',
        userDetailsWindow: '#UserDetailsWindow',
        userWinForm: '#UserWinForm',
        updateUser: '#UpdateUser',
        country: '#country',
        state: '#state',
        activeUser: '#activeUser',
        city: '#city',
        userSearchForm: '#UserSearchForm',
        clearUserSearchBt: '#clearUserSearchBt',
        changeToAdmin: '#changeToAdmin',
        changeToOrdinaryUser: '#changeToOrdinaryUser',
        addV: '#addV',
        cancelV: '#cancelV',
        companyAddVBt: '#companyAddVBt',
        companyCannelVBt: '#companyCannelVBt'
    },

    control: {
        "#closeUser": {
            click: 'onCloseUserClick'
        },
        "#queryDetails": {
            click: 'onQueryDetailsClick'
        },
        "#SearchUser": {
            click: 'onSearchUserClick'
        },
        "#UpdateUser": {
            click: 'onUpdateUserClick'
        },
        "#UserDetailsWindow": {
            close: 'onUserDetailsWindowClose'
        },
        "#country": {
            select: 'onCountrySelect'
        },
        "#state": {
            select: 'onStateSelect',
            focus: 'onStateFocus'
        },
        "#activeUser": {
            click: 'onActiveUserClick'
        },
        "#city": {
            focus: 'onCityFocus'
        },
        "#UserListGrid": {
            beforehide: 'onUserListGridBeforeHide'
        },
        "#clearUserSearchBt": {
            click: 'onClearUserSearchBtClick'
        },
        "#changeToAdmin": {
            click: 'onChangeToAdminClick'
        },
        "#changeToOrdinaryUser": {
            click: 'onChangeToOrdinaryUserClick'
        },
        "#addV": {
            click: 'onAddVClick'
        },
        "#cancelV": {
            click: 'onCancelVClick'
        },
        "#companyAddVBt": {
            click: 'onCompanyAddVBtClick'
        },
        "#companyCannelVBt": {
            click: 'onCompanyCannelVBtClick'
        }
    },

    /* 关闭用户 */
    onCloseUserClick: function(button, e, eOpts) {
        var selectionModel = this.getUserListGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            if(record[0].data.status == 2){
                Ext.MessageBox.alert('用户操作', "该用户无此操作");
            }else{
                Ext.Ajax.request({
                    url : "../api/user/delete/" + record[0].data.userId,
                    method : 'POST',
                    success : function(resp) {
                        var obj = Ext.util.JSON.decode(resp.responseText);
                        if(obj.result == true){
                            Ext.MessageBox.alert('用户操作', "已关闭该用户",function(btn){
                                if (btn == 'ok'){
                                    Ext.data.StoreManager.lookup("UserStore").reload();
                                }
                            });
                        }else{
                            Ext.MessageBox.alert('用户操作', "关闭失败");
                        }
                    }
                });
            }
        }
    },

    /* 打开编辑用户窗口 */
    onQueryDetailsClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getUserListGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var win = Ext.create("GURUAdmin.view.UserDetailsWindow");
            var form = win.getComponent("UserWinForm").getForm();
            var obj = record[0].data;
            form.setValues(obj);
            form.findField('sex').setValue({sex:obj.sex});
            form.findField('status').setValue({status:obj.status});
            var birth = obj.birth==''|| obj.birth==null?'':Ext.util.Format.date(new Date(obj.birth), "Y-m-d");
            form.findField('birth').setValue(birth);

            win.getComponent("avatar").src = obj.avatar==""||obj.avatar ==null ?'images/user.png':obj.avatar;
            //fill uprofessionstore
            Ext.Ajax.request({
                url : "../api/user/getUserProfs/"+record[0].data.userId,
                method : 'GET',
                success : function(resp) {
                    var t = Ext.util.JSON.decode(resp.responseText);
                    var uProfessionStore = Ext.data.StoreManager.lookup("UProfessionStore");
                    uProfessionStore.loadData(t.result);
                }
            });

            win.show();
        }
        //fill city country state store
        Ext.Ajax.request({
            url : "../api/user/getInfo",
            method : 'GET',
            success : function(resp) {
                var obj = Ext.util.JSON.decode(resp.responseText);
                var countryStore = Ext.data.StoreManager.lookup("CountryStore");
                countryStore.loadData(obj.result.country);
                var cityStore = Ext.data.StoreManager.lookup("CityStore");
                cityStore.loadData(obj.result.city);
                var StateStore = Ext.data.StoreManager.lookup("StateStore");
                StateStore.loadData(obj.result.state);
            }
        });
    },

    /* 搜索用户 */
    onSearchUserClick: function(button, e, eOpts) {
        var userStore = Ext.data.StoreManager.lookup("UserStore");
        var form = this.getUserSearchForm().getForm();
        //条件查询，支持翻页
        userStore.on('beforeload', function(store, options) {
            var queryParams = {
                limit : userStore.pageSize,
                userName :form.findField("userNameInput").value,
                nick : form.findField("nickInput").value,
                phone : form.findField("phoneInput").value,
                email : form.findField("emailInput").value,
                userType : form.findField("userTypeInput").value

            };
            Ext.apply(store.proxy.extraParams, queryParams);
        });
        userStore.loadPage(1);
    },

    /* 更新用户 */
    onUpdateUserClick: function(button, e, eOpts) {
        var me = this;
        var userId = this.getUserWinForm().getForm().findField("userId").getValue();
        // email = this.getUserWinForm().getForm().findField("email").getValue();
        //var phone = this.getUserWinForm().getForm().findField("phone").getValue();
        var nick = this.getUserWinForm().getForm().findField("nick").getValue();
        var birth = this.getUserWinForm().getForm().findField("birth").getValue();
        var userBrief = this.getUserWinForm().getForm().findField("userBrief").getValue();
        var sex = this.getUserWinForm().getForm().findField("sex").getValue().sex;
        var status = this.getUserWinForm().getForm().findField("status").getValue().status;

        var country = this.getCountry().value;
        var city = this.getCity().value;
        var state = this.getState().value;


        var temp = {
            "userId" : userId,
            "sex" : sex == '' ? null : sex,
            //"email" : email == '' ? null : email,
            //"phone" : phone == '' ? null : phone,
            "nick" : nick == '' ? null : nick,
            "status" : status == '' ? null : status,
            "birth" : birth == '' ? null : birth,
            "userBrief" : userBrief == '' ? null : userBrief,
            "country":country,
            "state":state,
            "city":city
        };
        Ext.Ajax.request({
            params : Ext.encode(temp),
            headers : {
                'Content-Type' : 'application/json'
            },
            url : "../api/user/admin/update",
            method : 'POST',
            success : function(resp) {
                var obj = Ext.util.JSON
                .decode(resp.responseText);
                if (obj.result == true) {
                    Ext.MessageBox.alert('更新操作', "更新成功");
                } else {
                    Ext.MessageBox.alert('更新操作', "更新失败");
                }
            }
        });
    },

    onUserDetailsWindowClose: function(panel, eOpts) {
        var userStore = Ext.data.StoreManager.lookup("UserStore");
        userStore.reload();
    },

    onCountrySelect: function(combo, records, eOpts) {
        //联级下拉框选中 在国家下拉框中的选中某条记录
        var stateCombox = this.getState();
        var cityCombox = this.getCity();
        stateCombox.setReadOnly(false);
        stateCombox.clearValue();
        cityCombox.setReadOnly(true);
        cityCombox.clearValue();
        var temp = records[0].data.code;
        var StateStore = Ext.data.StoreManager.lookup("StateStore");
        StateStore.clearFilter();
        StateStore.filterBy(function(record) {
            return record.get('cCode') == ""+temp+"";
        });
        //
    },

    onStateSelect: function(combo, records, eOpts) {
        //联级下拉框中 省下拉框的选中的某条记录
        var cityCombox = this.getCity();
        cityCombox.setReadOnly(false);
        cityCombox.clearValue();
        var temp = records[0].data.code;
        var cityStore = Ext.data.StoreManager.lookup("CityStore");
        cityStore.clearFilter();
        cityStore.filterBy(function(record) {
            return record.get('sCode') == ""+temp+"";
        });
    },

    onStateFocus: function(component, event, eOpts) {
        //联级下拉框--地区
        var countryName = this.getCountry().getValue();
        if(countryName !='' && countryName!=null){
            var countryStore = Ext.data.StoreManager.lookup("CountryStore");
            var record = countryStore.findRecord("name",countryName);
            var cCode;
            if(record != null && record != undefined){
                cCode = record.get('code');
                this.getState().setReadOnly(false);
                var StateStore = Ext.data.StoreManager.lookup("StateStore");
                StateStore.clearFilter();
                StateStore.filterBy(function(record) {
                    return record.get('cCode') == ""+cCode+"";
                });

            }
        }
    },

    onActiveUserClick: function(button, e, eOpts) {
        var selectionModel = this.getUserListGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            if(record[0].data.status == 1){
                Ext.MessageBox.alert('用户操作', "该用户无此操作");
            }else{
                Ext.Ajax.request({
                    url : "../api/user/activeUser/"
                    + record[0].data.userId,
                    method : 'POST',
                    success : function(resp) {
                        var obj = Ext.util.JSON.decode(resp.responseText);
                        if(obj.result == true){
                            Ext.MessageBox.alert('用户操作', "已启用该用户",function(btn){
                                if (btn == 'ok'){
                                    Ext.data.StoreManager.lookup("UserStore").reload();
                                }
                            });
                        }else{
                            Ext.MessageBox.alert('用户操作', "启用失败");
                        }
                    }
                });
            }
        }
    },

    onCityFocus: function(component, event, eOpts) {
        //联级下拉框--地区
        var state = this.getState().getValue();
        if(state!='' && state!=null){
            var StateStore = Ext.data.StoreManager.lookup("StateStore");
            var record  =  StateStore.findRecord("name",state);
            var sCode ;
            if(record != null && record != undefined){
                sCode = record.get('code');
                this.getCity().setReadOnly(false);
                var cityStore = Ext.data.StoreManager.lookup("CityStore");
                cityStore.clearFilter();
                cityStore.filterBy(function(record) {
                    return record.get('sCode') == ""+sCode+"";
                });

            }
        }
    },

    /* userGrid隐藏之前清掉输入框内容 */
    onUserListGridBeforeHide: function(component, eOpts) {
        this.getUserSearchForm().reset();
    },

    onClearUserSearchBtClick: function(button, e, eOpts) {
        this.getUserSearchForm().reset();
    },

    /* 设置用户为管理员 */
    onChangeToAdminClick: function(button, e, eOpts) {
        this.updateUserRoleId(5);
    },

    /* 移出管理员列表 */
    onChangeToOrdinaryUserClick: function(button, e, eOpts) {
        this.updateUserRoleId(2);
    },

    /* 用户加v */
    onAddVClick: function(button, e, eOpts) {
        this.updateUserType(1);
    },

    /* 取消加V */
    onCancelVClick: function(button, e, eOpts) {
        this.updateUserType(0);
    },

    /* 企业机构加V */
    onCompanyAddVBtClick: function(button, e, eOpts) {
        this.updateUserType(2);
    },

    /* 企业机构取消加V */
    onCompanyCannelVBtClick: function(button, e, eOpts) {
        this.updateUserType(0);
    },

    /* 更新用户角色，5为管理员，2为普通用户 */
    updateUserRoleId: function(roleId) {
        var me = this;
        var selectionModel = me.getUserListGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            if (record[0].data.roleId == roleId) {
                Ext.MessageBox.alert('用户操作', "该用户无此操作");
            } else {
                Ext.Ajax.request({
                    url: "../api/user/updateUserRole?roleId="+roleId+"&userId="+record[0].data.userId,
                    method: 'POST',
                    success: function (resp) {
                        var obj = Ext.util.JSON.decode(resp.responseText);
                        Ext.MessageBox.alert('用户操作', obj.message);
                        Ext.data.StoreManager.lookup("UserStore").reload();
                    }
                });
            }
        }
    },

    updateUserType: function(type) {
        var me = this;
        var selectionModel = me.getUserListGrid().getSelectionModel();
        var records = selectionModel.getSelection();
        if (records == null || records == undefined || records.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var ids= new Array();
            for (var i = 0; i < records.length; i++) {
                ids.push(records[i].get('userId'));
            }
            var temp = {
                "ids":ids,
                "userType":type
            };
            Ext.Ajax.request({
                url: "../api/user/batUpdateUserType",
                params: Ext.encode(temp),
                headers: {
                    'Content-Type': 'application/json'
                },
                method: 'POST',
                success: function (resp) {
                    var obj = Ext.util.JSON.decode(resp.responseText);
                    Ext.MessageBox.alert('用户操作', obj.message);
                    Ext.data.StoreManager.lookup("UserStore").reload();
                }
            });
        }
    }

});
