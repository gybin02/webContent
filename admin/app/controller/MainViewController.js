/*
 * File: app/controller/MainViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.MainViewController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.mainviewcontroller',

    refs: {
        headerPanel: '#headerPanel',
        gMainPanel: '#GMainPanel',
        userListGrid: '#UserListGrid',
        menuPanel: '#MenuPanel',
        invitationUserListGrid: '#InvitationUserListGrid',
        columnListGrid: '#ColumnListGrid',
        postsGrid: '#PostsGrid',
        articleListGrid: '#ArticleListGrid',
        commentsGrid: '#CommentsGrid',
        heatViewGrid: '#HeatViewGrid',
        invitationUserDetailGrid: '#InvitationUserDetailGrid',
        configFormPanel: '#ConfigFormPanel',
        linkToCommentsGrid: '#linkToCommentsGrid',
        userInvitationDetailBt: '#userInvitationDetailBt',
        loginOutBt: '#LoginOutBt',
        headerPanel: '#headerPanel',
        ga100FormPanel: '#Ga100FormPanel',
        ga100Image: '#ga100Image',
        mediaArticleGridPanel: '#MediaArticleGridPanel',
        relationStockGrid: '#RelationStockGrid',
        postStockRelationGrid: '#PostStockRelationGrid',
        bizLogGrid: '#BizLogGrid'
    },

    control: {
        "#manageUser": {
            click: 'onManageUserClick'
        },
        "#MenuPanel": {
            itemclick: 'onMenuPanelItemClick'
        },
        "#linkToCommentsGrid": {
            click: 'onLinkToCommentsGridClick'
        },
        "#userInvitationDetailBt": {
            click: 'onUserInvitationDetailBtClick'
        },
        "#LoginOutBt": {
            click: 'onLoginOutBtClick'
        }
    },

    onManageUserClick: function(item, e, eOpts) {

    },

    /* 菜单选择事件 */
    onMenuPanelItemClick: function(dataview, record, item, index, e, eOpts) {
        var me=this;
        var treepanel = this.getMenuPanel();
        var selectModels = treepanel.getSelectionModel().getSelection();
        var selectModel = selectModels[0];
        var menuNodeData = selectModel.data;
        var url = menuNodeData.url;
        //用户管理
        if (url == 'UserListGrid') {
            me.showTargetListGrid(this.getUserListGrid());
            return;
        }
        //邀请码用户生成
        if(url == 'InvitationUserListGrid'){
            me.showTargetListGrid(this.getInvitationUserListGrid());
            return;
        }
        //邀请码用户管理
        if (url == 'UserInvitationManageListGrid') {
            me.showTargetListGrid(this.getInvitationUserDetailGrid());
            return;
        }
        //栏目管理
        if(url == 'ColumnListGrid'){
            me.showTargetListGrid(this.getColumnListGrid());
            return ;
        }
        //帖子
        if(url == 'PostsGrid'){
            me.showTargetListGrid(this.getPostsGrid());
            return;
        }
        //文章
        if(url == 'articleListGrid'){
            me.showTargetListGrid(this.getArticleListGrid());
            return;
        }
        //评论
        if (url == 'CommentsGrid') {
            me.showTargetListGrid(this.getCommentsGrid());
            return;
        }
        //热读榜管理
        if (url == 'HeatViewGrid') {
            me.showTargetListGrid(this.getHeatViewGrid());
            return;
        }
        //公共号文章管理
        if(url == 'MediaArticleGridPanel'){
            me.showTargetListGrid(this.getMediaArticleGridPanel());
            return;
        }
        //帖子加精
        if(url == 'RelationStockGridPanel'){
            me.showTargetListGrid(this.getRelationStockGrid());
            return;
        }
        //帖子股票关联
        if(url == 'PostStockRelationPanel'){
            me.showTargetListGrid(this.getPostStockRelationGrid());
            return;
        }
        //日志列表
        if(url == 'BizLogGrid'){
            me.showTargetListGrid(this.getBizLogGrid());
            return ;
        }
        //港A100设置
        if (url == 'ga100FormPanel') {
            me.hideAllListGrid();
            me.getGa100FormPanel().show();

            Ext.Ajax.request({
                url: '../api/quote/market/detail?marketCode=glh00001',
                method : 'GET',
                success: function (resp) {
                    var result = Ext.util.JSON.decode(resp.responseText).result[0];
                    var form = me.getGa100FormPanel().getForm();
                    form.findField('index').setValue(result.index);
                    form.findField('change').setValue(result.change);
                    form.findField('netChange').setValue(result.netChange);
                    form.findField('image').setValue(result.kMapUrl);

                    var uploadImage = me.getGa100Image();
                    uploadImage.setSrc(result.kMapUrl);
                }
            });

            return;
        }
        //系统配置
        if(url == 'ConfigFormPanel'){
            me.hideAllListGrid();
            me.getConfigFormPanel().show();

            Ext.Ajax.request({
                url: '../api/config/list',
                method : 'GET',
                success: function (resp) {
                    var t = Ext.util.JSON.decode(resp.responseText).result;
                    var form = me.getConfigFormPanel().getForm();
                    me.getConfigFormPanel().reset();
                    for(var i = 0;i<t.length;i++){
                        if(t[i].key=='ESSENCE_LIMIT'){
                            form.findField('essenceLimit').setValue(t[i].value);
                        }
                        if(t[i].key=='SENSITIVE_WORD'){
                            form.findField('sensitiveWord').setValue(t[i].value);
                        }
                        if(t[i].key=='DOMAIN'){
                            form.findField('domain').setValue(t[i].value);
                        }
                    }
                }
            });
        }
        else{

        }
    },

    /* 帖子页面的帖子评论按钮事件：跳到该帖子相关的评论管理菜单项 */
    onLinkToCommentsGridClick: function(button, e, eOpts) {
        /*var me = this;
        var selectionModel = me.getPostsGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var commentsGrid = me.getCommentsGrid();
            var obj = record[0].data;
            commentsGrid.getStore().reload({
                params:{
                    "postId":obj.postId,
                    "start":0,
                    "page":1,
                    "limit":30
                }
            });
            me.hideAllListGrid();
            var treepanel = me.getMenuPanel();
            var record = treepanel.getStore().findRecord("url","commentsGrid");
            treepanel.getSelectionModel().select(record);
            commentsGrid.show();
        }*/
        var me = this;
        var postGrid = me.getPostsGrid();
        var commentsGrid = me.getCommentsGrid();
        params = {
            "postId":"postId"
        };
        me.jumpMenu("commentsGrid",postGrid,commentsGrid,params);
    },

    /* 邀请码生成页面查看详细信息按钮事件：跳转到该用户的邀请码详细页面 */
    onUserInvitationDetailBtClick: function(button, e, eOpts) {
        var me = this;
        var invitationUserListGrid = this.getInvitationUserListGrid();
        var invitationUserDetailGrid = this.getInvitationUserDetailGrid();

        var params = {
            "inviterId":"inviterId"
        };

        me.jumpMenu("UserInvitationManageListGrid",invitationUserListGrid,invitationUserDetailGrid,params);

    },

    onLoginOutBtClick: function(button, e, eOpts) {
        window.location.href='../api/admin/logout';
    },

    /* 隐藏所有的列表,FIXME:可用eval来完成动态隐藏 */
    hideAllListGrid: function() {
        var me = this;
        me.getCommentsGrid().hide();
        me.getPostsGrid().hide();
        me.getInvitationUserListGrid().hide();
        me.getUserListGrid().hide();
        me.getColumnListGrid().hide();
        me.getArticleListGrid().hide();
        me.getHeatViewGrid().hide();
        me.getConfigFormPanel().hide();
        me.getInvitationUserDetailGrid().hide();
        me.getGa100FormPanel().hide();
        me.getMediaArticleGridPanel().hide();
        me.getRelationStockGrid().hide();
        me.getPostStockRelationGrid().hide();
        me.getBizLogGrid().hide();
    },

    /* 隐藏所有的列表，仅显示指定的列表 */
    showTargetListGrid: function(targetListGrid) {
        var me = this;
        targetListGrid.getStore().loadPage(1);
        me.hideAllListGrid();
        targetListGrid.show();
    },

    /*
        菜单的跳转
        参数说明：
        url为在treePanel里面的跳转的url
        fromGrid是未跳转前的Gird
        toGrid是将要跳转到的Grid
        dataParams是一个封装了查询参数的对象，其中的属性名为查询时的参数名，值则为选中的行data参数
        例如:dataParams={""inviterNick":"nick"},发送的url则为inviterNick=data[nick]
    */
    jumpMenu: function(url, fromGrid, toGrid, dataParams) {
        var me = this;
        var selectionModel = fromGrid.getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var data = record[0].data;
            var params ={};
            params.page = 1;
            params.limit = 30;
            for(value in dataParams){
                params[value] = data[dataParams[value]];
            }

            var obj = record[0].data;
            var store = toGrid.getStore();

            store.clearExtraParams();

            store.loadPage(1,{
                params:params
            });
            me.hideAllListGrid();
            toGrid.show();
            var treepanel = me.getMenuPanel();
            var record = treepanel.getStore().findRecord("url",url);
            treepanel.getSelectionModel().select(record);
        }
    }

});
