/*
 * File: app/controller/HeatViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.HeatViewController', {
    extend: 'Ext.app.Controller',

    refs: {
        addHeatViewWinForm: '#addHeatViewWinForm',
        addHeatViewBt: '#addHeatViewBt',
        heatViewSearchForm: '#heatViewSearchForm',
        searchHeatViewBt: '#SearchHeatViewBt',
        heatviewDetails: '#HeatviewDetails',
        deleteHeatView: '#deleteHeatView',
        editHeatViewWinForm: '#editHeatViewWinForm',
        editHeatViewBt: '#editHeatViewBt',
        heatViewGrid: '#HeatViewGrid',
        editHeatViewWindow: '#EditHeatViewWindow',
        clearHeatViewSearchBt: '#clearHeatViewSearchBt'
    },

    control: {
        "#addHeatViewBt": {
            click: 'onAddHeatViewBtClick'
        },
        "#SearchHeatViewBt": {
            click: 'onSearchHeatViewBtClick'
        },
        "#HeatviewDetails": {
            click: 'onHeatviewDetailsClick'
        },
        "#deleteHeatView": {
            click: 'onDeleteHeatViewClick'
        },
        "#editHeatViewBt": {
            click: 'onEditHeatViewBtClick'
        },
        "#EditHeatViewWindow": {
            close: 'onEditHeatViewWindowClose'
        },
        "#HeatViewGrid": {
            beforehide: 'onHeatViewGridBeforeHide'
        },
        "#clearHeatViewSearchBt": {
            click: 'onClearHeatViewSearchBtClick'
        }
    },

    /* 增加热读榜记录 */
    onAddHeatViewBtClick: function(button, e, eOpts) {
        var me = this;
        var form = me.getAddHeatViewWinForm().getForm();
        var remark = form.findField("formHeatRemark").getValue();
        if(remark.length > 200){
            Ext.MessageBox.alert('新增操作', '标注内容字数超过限制');
            return;
        }

        var form = this.getAddHeatViewWinForm().getForm();
        var temp = {
            "author": form.findField("formAuthor").getValue(),
            "postId":form.findField("formHeatPostId").getValue(),
            "showFlag": form.findField("formHeatShowFlag").getValue().formHeatShowFlag,
            "type": form.findField("formHeatType").getValue().formHeatType,
            "remark": form.findField("formHeatRemark").getValue(),
            "sortCode":form.findField("formHeatSortCode").getValue()


        };
        Ext.Ajax.request({
            url: '../api/heatview/add',
            method : 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            params: Ext.encode(temp),
            success: function(response){
                result=Ext.util.JSON.decode(response.responseText);
                if(result.statusCode == 200){
                    Ext.MessageBox.alert('新增操作', '新增热读记录成功');
                }
            }
        });
    },

    onSearchHeatViewBtClick: function(button, e, eOpts) {
        var me = this;
        var form = me.getHeatViewSearchForm().getForm();
        var heatViewStore = Ext.data.StoreManager.lookup("HeatViewStore");
        //条件查询，支持翻页
        heatViewStore.on('beforeload', function(store, options) {
            var toDate = form.findField("heatCreateDateTo").getValue();
            var fromDate = form.findField("heatCreateDateFrom").getValue();
            var type =form.findField("heatTypeInput").value;
            var queryParams = {
                "remark": form.findField("heatRemarkInput").getValue(),
                "showFlag": form.findField("heatShowFlagInput").getValue()?1:2,
                "type": type==-1?null:type,
                "author":  form.findField("heatAuthorInput").getValue(),
                "toDate": toDate==null || toDate ==''?null:toDate.getTime()/1000,
                "fromDate": fromDate==null || fromDate ==''?null:fromDate.getTime()/1000
            };
            Ext.apply(store.proxy.extraParams, queryParams);
        });
        heatViewStore.loadPage(1);
    },

    /* 编辑热读榜记录 */
    onHeatviewDetailsClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getHeatViewGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var win = Ext.create("GURUAdmin.view.EditHeatViewWindow");
            var form = win.getComponent("editHeatViewWinForm").getForm();
            var obj = record[0].data;
            form.findField("gridHeatPostId").setValue(obj.postId);
            form.findField("gridAuthor").setValue(obj.author);
            form.findField('gridHeatShowFlag').setValue({gridHeatShowFlag: obj.showFlag});
            form.findField('gridHeatType').setValue({gridHeatType: obj.type});
            form.findField("gridHeatSortCode").setValue(obj.sortCode);
            form.findField("gridHeatId").setValue(obj.id);
            form.findField("gridHeatRemark").setValue(obj.remark);
            var createDate = obj.createDate == '' || obj.createDate == null ? '' : Ext.util.Format.date(new Date(obj.createDate*1000), "Y-m-d");
            form.findField('gridCreateDate').setValue(createDate);
            win.show();
        }
    },

    onDeleteHeatViewClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getHeatViewGrid().getSelectionModel();
        var records = selectionModel.getSelection();
        if (records == null || records == undefined || records.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var ids= new Array();
            for (var i = 0; i < records.length; i++) {
                ids.push(records[i].get('id'));
            }
            var temp = {
                "ids":ids
            };
            Ext.Ajax.request({
                url:"../api/heatview/delete",
                method: 'POST',
                params: Ext.encode(temp),
                headers: {
                    'Content-Type': 'application/json'
                },
                success: function (resp) {
                    var t = Ext.util.JSON.decode(resp.responseText);
                    if(t.statusCode ==200){
                        Ext.MessageBox.alert('批量操作', "成功删除热读记录"+ids.length+"条");
                        me.getHeatViewGrid().getStore().reload();
                    }
                }


            });
        }
    },

    onEditHeatViewBtClick: function(button, e, eOpts) {
        var me =this;
        var form = me.getEditHeatViewWinForm().getForm();
        var temp = {
            "author": form.findField("gridAuthor").getValue(),
            "postId":form.findField("gridHeatPostId").getValue(),
            "showFlag": form.findField("gridHeatShowFlag").getValue().gridHeatShowFlag,
            "type": form.findField("gridHeatType").getValue().gridHeatType,
            "remark": form.findField("gridHeatRemark").getValue(),
            "sortCode":form.findField("gridHeatSortCode").getValue(),
            "id":form.findField("gridHeatId").getValue()


        };
        Ext.Ajax.request({
            url: '../api/heatview/update',
            method : 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            params: Ext.encode(temp),
            success: function(response){
                result=Ext.util.JSON.decode(response.responseText);
                if(result.statusCode == 200){
                    Ext.MessageBox.alert('编辑操作', '更新成功');
                }
            }
        });
    },

    /* 编辑热读榜窗口关闭后，回到列表要刷新 */
    onEditHeatViewWindowClose: function(panel, eOpts) {
        this.getHeatViewGrid().getStore().reload();
    },

    onHeatViewGridBeforeHide: function(component, eOpts) {
        this.getHeatViewSearchForm().reset();
    },

    onClearHeatViewSearchBtClick: function(button, e, eOpts) {
        this.getHeatViewSearchForm().reset();
    }

});
