/*
 * File: app/controller/ColumnController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.ColumnController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.ColumnController',

    models: [
        'ColumnModel'
    ],

    refs: {
        addColumnBt: '#addColumnBt',
        deleteColumnBt: '#deleteColumnBt',
        updateColumnBt: '#updateColumnBt',
        columnListGrid: '#ColumnListGrid',
        columnEditSubmit: '#columnEditSubmit',
        columnAddSubmit: '#columnAddSubmit',
        columnEditSubmit: '#columnEditSubmit',
        columnAddForm: '#columnAddForm',
        columnAddWindows: '#ColumnAddWindows',
        columnEidtForm: '#columnEidtForm',
        columnEditWindow: '#ColumnEditWindow',
        columnAddWindow: '#ColumnAddWindow'
    },

    control: {
        "#addColumnBt": {
            click: 'onAddColumnBtClick'
        },
        "#updateColumnBt": {
            click: 'onUpdateColumnBtClick'
        },
        "#columnAddSubmit": {
            click: 'onColumnAddSubmitClick'
        },
        "#columnEditSubmit": {
            click: 'onColumnEditSubmitClick'
        },
        "#deleteColumnBt": {
            click: 'onDeleteColumnBtClick'
        }
    },

    /* 在栏目列表界面的新增按钮事件 */
    onAddColumnBtClick: function(button, e, eOpts) {
        var win = Ext.create("GURUAdmin.view.ColumnAddWindow");
        win.show();
    },

    /* 栏目列表页面编辑按钮事件 */
    onUpdateColumnBtClick: function(button, e, eOpts) {
        var me = this;
        var win = Ext.create("GURUAdmin.view.ColumnEditWindow");
        win.show();
        var columnListGrid = this.getColumnListGrid();
        var form = this.getColumnEidtForm().getForm();
        var selectionModel = columnListGrid.getSelectionModel();
        var record = selectionModel.getSelection();
        if (record === null || record === undefined || record.length === 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        }else{
            var data = record[0].data;
            form.findField('columnEditCode').setValue(data.columnCode);
            form.findField('columnEditName').setValue(data.columnName);
            form.findField('columnEditSequence').setValue(data.sequence);
            form.findField('columnEditWinStatus').setValue({columnEditWinStatus:data.status});
            form.findField('columnEditWinType').setValue({columnEditWinType:data.type});
        }
    },

    /* 栏目新增界面提交按钮事件 */
    onColumnAddSubmitClick: function(button, e, eOpts) {
        var columnListGrid = this.getColumnListGrid();
        var addFormPanel = this.getColumnAddForm();
        var addForm = addFormPanel.getForm();
        var columnAddWin = this.getColumnAddWindow();
        addForm.submit({
            clientValidation: true,
            url: '../api/column/add',
            params: {
                columnCode:addForm.findField('columnAddCode').getValue(),
                sequence:addForm.findField('columnAddSequence').getValue(),
                columnName:addForm.findField('columnAddName').getValue(),
                status:addForm.findField('columnAddWinStatus').getValue(),
                type:addForm.findField('columnAddWinType').getValue()

            },
            //因为没有在服务器端没有传回success:true，所以一定是失败
            failure: function(resp) {
                if(resp === null){
                    Ext.Msg.alert('失败', '新增栏目失败');
                }else{
                    Ext.Msg.alert('成功', '新增栏目成功');
                    columnListGrid.getStore().reload();
                    columnAddWin.close();
                }
            }
        });
    },

    /* 在栏目编辑提交按钮 */
    onColumnEditSubmitClick: function(button, e, eOpts) {
        var columnListGrid = this.getColumnListGrid();
        var eidtWin = this.getColumnEditWindow();
        var form = this.getColumnEidtForm().getForm();
        Ext.Ajax.request({
            url: '../api/column/update',
            headers : {
                'Content-Type' : 'application/x-www-form-urlencoded'
            },
            method : 'POST',
            params: {
                columnCode:form.findField('columnEditCode').getValue(),
                sequence:form.findField('columnEditSequence').getValue(),
                columnName:form.findField('columnEditName').getValue(),
                status:form.findField('columnEditWinStatus').getValue(),
                type:form.findField('columnEditWinType').getValue()
            },
            success: function(response){
                columnListGrid.getStore().reload();
                eidtWin.close();
            }
        });

    },

    /* 列表页面删除按钮事件 */
    onDeleteColumnBtClick: function(button, e, eOpts) {

        var columnListGrid = this.getColumnListGrid();
        var selectionModel = columnListGrid.getSelectionModel();
        var columnStore = columnListGrid.getStore();
        var record = selectionModel.getSelection();
        var columnCode = record[0].data.columnCode;

        //选中不能为空
        if (record === null || record === undefined || record.length === 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
            return ;
        }else{
            Ext.MessageBox.confirm('选择框','请确定是否删除?',function(btn){
                if(btn == 'no'){
                    return;
                }else{
                    Ext.Ajax.request({
                        url: '../api/column/' + columnCode + "/delete",
                        method : 'POST',
                        success: function(response){
                            var result = Ext.decode(response.responseText);
                            if(result.statusCode == 417){
                                alert("无法删除栏目，原因是: "+result.message);
                            }else{
                                columnStore.reload();
                            }
                        }
                    });
                }
            });
        }
    }

});
