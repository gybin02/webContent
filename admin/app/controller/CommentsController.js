/*
 * File: app/controller/CommentsController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GURUAdmin.controller.CommentsController', {
    extend: 'Ext.app.Controller',

    refs: {
        commentsSearchForm: '#commentsSearchForm',
        searchCommentsBt: '#SearchCommentsBt',
        deleteComment: '#deleteComment',
        commentsGrid: '#CommentsGrid',
        commentDetails: '#commentDetails',
        commentUpdateBt: '#CommentUpdateBt',
        commentDetailsWinForm: '#CommentDetailsWinForm',
        commentDetailsWindow: '#CommentDetailsWindow',
        clearCommentSearchBt: '#clearCommentSearchBt'
    },

    control: {
        "#SearchCommentsBt": {
            click: 'onSearchCommentsBtClick'
        },
        "#deleteComment": {
            click: 'onDeleteCommentClick'
        },
        "#commentDetails": {
            click: 'onCommentDetailsClick'
        },
        "#CommentUpdateBt": {
            click: 'onCommentUpdateBtClick'
        },
        "#CommentDetailsWindow": {
            close: 'onCommentDetailsWindowClose'
        },
        "#CommentsGrid": {
            beforehide: 'onCommentsGridBeforeHide'
        },
        "#clearCommentSearchBt": {
            click: 'onClearCommentSearchBtClick'
        }
    },

    onSearchCommentsBtClick: function(button, e, eOpts) {
        var me = this;
        var commentStore = Ext.data.StoreManager.lookup("CommentStore");
        //条件查询，支持翻页
        commentStore.on('beforeload', function(store, options) {
            var form = me.getCommentsSearchForm().getForm();
            var toDate = form.findField("commentToInput").getValue();
            var fromDate = form.findField("CommentFromInput").getValue();
            var queryParams = {
                "nick": form.findField("CommenterInput").getValue(),
                "content":  form.findField("commentContentInput").getValue(),
                "toDate": toDate==null || toDate ==''?null:toDate.getTime()/1000,
                "fromDate": fromDate==null || fromDate ==''?null:fromDate.getTime()/1000,
            };
            Ext.apply(store.proxy.extraParams, queryParams);
        });
        commentStore.loadPage(1);
    },

    onDeleteCommentClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getCommentsGrid().getSelectionModel();
        var records = selectionModel.getSelection();
        if (records == null || records == undefined || records.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var ids= new Array();
            for (var i = 0; i < records.length; i++) {
                ids.push(records[i].get('id'));
            }
            var temp = {
                "ids":ids
            };
            Ext.Ajax.request({
                url:"../api/comment/delete",
                method: 'POST',
                params: Ext.encode(temp),
                headers: {
                    'Content-Type': 'application/json'
                },
                success: function (resp) {
                    var t = Ext.util.JSON.decode(resp.responseText);
                    if(t.statusCode ==200){
                        Ext.MessageBox.alert('批量操作', "成功删除评论"+ids.length+"条");
                        var commentStore = Ext.data.StoreManager.lookup("CommentStore");
                        commentStore.reload();
                    }
                }


            });
        }
    },

    onCommentDetailsClick: function(button, e, eOpts) {
        var me = this;
        var selectionModel = me.getCommentsGrid().getSelectionModel();
        var record = selectionModel.getSelection();
        if (record == null || record == undefined || record.length == 0) {
            Ext.MessageBox.alert('未选中', "请选中一行");
        } else {
            var win = Ext.create("GURUAdmin.view.CommentDetailsWindow");
            var obj = record[0].data;
            var form = win.getComponent("CommentDetailsWinForm").getForm();
            form.findField("FormCommentId").setValue(obj.id);

            form.findField("FormCommenter").setValue(obj.nickname);
            form.findField("FormContent").setValue(obj.content);
            var createDate = obj.createDate == '' || obj.createDate == null ? '' : Ext.util.Format.date(new Date(obj.createDate*1000), "Y-m-d");
            form.findField('FormCommentCreateDate').setValue(createDate);
            win.show();
        }
    },

    onCommentUpdateBtClick: function(button, e, eOpts) {
        var me = this;
        var form = this.getCommentDetailsWinForm().getForm();
        var id = parseInt(form.findField("FormCommentId").getValue());
        var content = form.findField("FormContent").getValue();

        var temp = {
            "id": id,
            "content": content == '' ? null : content
        };
        Ext.Ajax.request({
            params: Ext.encode(temp),
            headers: {
                'Content-Type': 'application/json'
            },
            url: "../api/comment/update",
            method: 'POST',
            success: function (resp) {
                var obj = Ext.util.JSON
                .decode(resp.responseText);
                Ext.MessageBox.alert('更新操作', obj.message);
            }
        });
    },

    onCommentDetailsWindowClose: function(panel, eOpts) {
        this.getCommentsGrid().getStore().reload();
    },

    onCommentsGridBeforeHide: function(component, eOpts) {
        this.getCommentsSearchForm().reset();
    },

    onClearCommentSearchBtClick: function(button, e, eOpts) {
        this.getCommentsSearchForm().reset();
    }

});
